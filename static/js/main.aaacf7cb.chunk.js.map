{"version":3,"sources":["components/Button.jsx","components/Header.jsx","components/Input.jsx","components/Select.jsx","actions/actionTypes.js","actions/index.js","pages/Login.jsx","utils/loginChecker.js","pages/NotFound.jsx","utils/api.js","actions/actionsThunk.js","utils/options.js","components/Tbody.jsx","components/Table.jsx","components/Expenses.jsx","pages/Wallet.jsx","App.js","serviceWorker.js","reducers/user.js","reducers/wallet.js","reducers/index.js","store/index.js","index.js"],"names":["PropTypes","string","func","bool","Button","props","type","name","text","id","className","testID","onClick","disabled","Header","totalAmount","bind","result","this","getWalletExpenses","reduce","acc","curr","value","currency","rate","exchangeRates","ask","parseFloat","Math","round","user","React","Component","connect","state","email","wallet","expenses","Input","labelText","placeholder","onChange","htmlFor","Select","options","map","item","index","USER_INFO","LOADING_TYPE","SUCCESS_TYPE","ERROR_TYPE","ADD_EXPENSES","DELETE_EXPENSE","errorAction","addExpenseAction","payload","Login","password","invalidEmail","invalidPassword","redirect","validatePassword","validateEmail","handleSubmit","target","length","passwordChecker","setState","test","emailChecker","event","preventDefault","setEmailToStore","to","src","alt","onSubmit","dispatch","NotFound","fetchApi","a","fetch","api","json","apiJson","apiWithThunk","then","response","tags","methods","Tbody","handleClick","remove","parseInt","getExpenses","expense","description","tag","method","split","Number","toFixed","arrayOf","object","expenseID","Table","renderTable","Expenses","renderInputs","renderSelects","renderForm","handleChange","getCoinsThunk","currencies","filterCurrencies","Object","keys","filter","ok","Error","USDT","message","fetchExpenseAPI","Wallet","App","exact","path","component","Boolean","window","location","hostname","match","INITIAL_STATE","userReducer","action","isLoading","walletReducer","error","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.aaacf7cb.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Button(props) {\n  const { type, name, text, id, className, testID, onClick, disabled } = props;\n\n  return (\n    <div>\n      <button\n        type={ type ? 'button' : 'submit' }\n        name={ name }\n        id={ id }\n        className={ className }\n        data-testid={ testID }\n        onClick={ onClick }\n        disabled={ disabled }\n      >\n        { text }\n      </button>\n    </div>\n  );\n}\n\nconst { string, func, bool } = PropTypes;\n\nButton.propTypes = {\n  type: string,\n  name: string,\n  text: string,\n  id: string,\n  className: string,\n  testID: string,\n  onClick: func,\n  disabled: bool,\n}.isRequired;\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n\n    this.totalAmount = this.totalAmount.bind(this);\n  }\n\n  totalAmount() {\n    const { getWalletExpenses } = this.props;\n    const result = getWalletExpenses.reduce((acc, curr) => {\n      const { value, currency, exchangeRates } = curr;\n      const rate = exchangeRates[currency].ask;\n\n      acc += (parseFloat(value) * parseFloat(rate));\n      return acc;\n    }, 0);\n    return Math.round(result * 100) / 100;\n  }\n\n  render() {\n    const { user } = this.props;\n    // console.log(getWalletExpenses);\n    // console.log(this.totalAmount());\n\n    return (\n      <header data-testid=\"email-field\">\n        <h3>\n          Email:\n          <span>{` ${user}`}</span>\n        </h3>\n\n        <div data-testid=\"total-field\">\n          <p>\n            Despesa total: R$\n            {this.totalAmount()}\n          </p>\n        </div>\n\n        <div data-testid=\"header-currency-field\">\n          <p>Câmbio: BRL</p>\n        </div>\n      </header>\n    );\n  }\n}\n\nconst { string } = PropTypes;\n\nHeader.propTypes = {\n  email: string,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  user: state.user.email,\n  getWalletExpenses: state.wallet.expenses,\n});\n\nexport default connect(mapStateToProps)(Header);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Input(props) {\n  const { type, name, labelText, placeholder, className, id, testID, onChange } = props;\n\n  return (\n    <div>\n      <label htmlFor={ id }>\n        { labelText }\n        <input\n          type={ type }\n          name={ name }\n          placeholder={ placeholder }\n          className={ className }\n          id={ id }\n          data-testid={ testID }\n          onChange={ onChange }\n        />\n      </label>\n    </div>\n  );\n}\n\nconst { string, func } = PropTypes;\n\nInput.propTypes = {\n  type: string,\n  name: string,\n  labelText: string,\n  placeholder: string,\n  className: string,\n  id: string,\n  testID: string,\n  onChange: func,\n}.isRequired;\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Select(props) {\n  const { name, labelText, id, options, onChange } = props;\n  // console.log(options);\n\n  return (\n    <label htmlFor={ id }>\n      { labelText }\n      <select\n        name={ name }\n        id={ id }\n        onChange={ onChange }\n      >\n        {\n          options ? options.map((item, index) => (\n            <option\n              key={ index }\n              value={ item }\n            >\n              { item }\n            </option>\n          )) : null\n        }\n      </select>\n    </label>\n  );\n}\n\nconst { string, func } = PropTypes;\n\nSelect.propTypes = {\n  name: string,\n  labelText: string,\n  id: string,\n  onChange: func,\n}.isRequired;\n\nexport default Select;\n","// Login page\nexport const USER_INFO = 'USER_INFO';\n\n// Wallet\nexport const LOADING_TYPE = 'LOADING_TYPE';\nexport const SUCCESS_TYPE = 'SUCCESS_TYPE';\nexport const ERROR_TYPE = 'ERROR_TYPE';\nexport const SUBMIT_TYPE = 'SUBMIT_TYPE';\nexport const ADD_EXPENSES = 'ADD_EXPENSES';\nexport const DELETE_EXPENSE = 'DELETE_EXPENSE';\n","import {\n  USER_INFO,\n  LOADING_TYPE,\n  SUCCESS_TYPE,\n  ERROR_TYPE,\n  SUBMIT_TYPE,\n  ADD_EXPENSES,\n  DELETE_EXPENSE,\n} from './actionTypes';\n\n// Login page\n\nexport const sendUserInfo = (payload) => ({\n  type: USER_INFO,\n  payload,\n});\n\n// Wallet\n\nexport const sucessAction = (payload) => ({\n  type: SUCCESS_TYPE,\n  payload,\n});\n\nexport const errorAction = () => ({\n  type: ERROR_TYPE,\n});\n\nexport const loadingAction = () => ({\n  type: LOADING_TYPE,\n});\n\nexport const submitAction = (payload) => ({\n  type: SUBMIT_TYPE,\n  payload,\n});\n\nexport const addExpenseAction = (payload) => ({\n  type: ADD_EXPENSES,\n  payload,\n});\n\nexport const deleteExpense = (id) => ({\n  type: DELETE_EXPENSE,\n  id,\n});\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Input, Button } from '../components';\nimport { emailChecker, passwordChecker } from '../utils/loginChecker';\nimport { sendUserInfo } from '../actions';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      invalidEmail: true,\n      invalidPassword: true,\n      redirect: false,\n    };\n\n    this.validatePassword = this.validatePassword.bind(this);\n    this.validateEmail = this.validateEmail.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  validatePassword({ target: { value } }) {\n    const password = passwordChecker(value);\n\n    if (password) {\n      return this.setState({\n        password: value,\n        invalidPassword: false,\n      });\n    }\n    return this.setState({\n      password: value,\n      invalidPassword: true,\n    });\n  }\n\n  validateEmail({ target: { value } }) {\n    const email = emailChecker(value);\n\n    if (email) {\n      return this.setState({\n        email: value,\n        invalidEmail: false,\n      });\n    }\n\n    return this.setState({\n      email: value,\n      invalidEmail: true,\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { setEmailToStore } = this.props;\n    const { email, password } = this.state;\n\n    setEmailToStore(({\n      email,\n      password,\n    }));\n\n    this.setState({\n      redirect: true,\n    });\n  }\n\n  render() {\n    const { redirect, invalidEmail, invalidPassword } = this.state;\n    if (redirect) return <Redirect to=\"/trybewallet/wallet\" />;\n\n    return (\n      <div className=\"login-container\">\n        <div className=\"logo-container\">\n          <div className=\"wallet\">\n            <img\n              src=\"https://i.ibb.co/3dBLWWV/clipart1723162.png\"\n              alt=\"wallet\"\n              id=\"wallet\"\n            />\n          </div>\n          <div className=\"trybe\">\n            <img\n              src=\"https://freecourse.betrybe.com/images/trybe-logo-e10dbaaa26462aa149b81a924b00df07.png?vsn=d\"\n              alt=\"trybe\"\n              id=\"trybe\"\n            />\n          </div>\n        </div>\n        <form onSubmit={ this.handleSubmit }>\n          <Input\n            type=\"text\"\n            placeholder=\"E-mail\"\n            className=\"input\"\n            id=\"email\"\n            testID=\"email-input\"\n            onChange={ this.validateEmail }\n          />\n          <Input\n            type=\"password\"\n            placeholder=\"Senha\"\n            className=\"input\"\n            id=\"password\"\n            testID=\"password-input\"\n            onChange={ this.validatePassword }\n          />\n          <Button\n            id=\"submit-button\"\n            text=\"Entrar\"\n            disabled={ invalidEmail || invalidPassword }\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  setEmailToStore: PropTypes.func,\n}.isRequired;\n\nconst mapDispatchToProps = (dispatch) => ({\n  setEmailToStore: (value) => dispatch(sendUserInfo(value)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n","// Consultei os links abaixo para auxiliar no regex:\n// https://www.horadecodar.com.br/2020/09/07/expressao-regular-para-validar-e-mail-javascript-regex/\n\nexport function emailChecker(email) {\n  const regex = /\\S+@\\S+\\.\\S+/;\n\n  return regex.test(email);\n}\n\nexport function passwordChecker(password) {\n  const MIN_LENGTH_PASSWORD = 6;\n\n  return password.length >= MIN_LENGTH_PASSWORD;\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction NotFound() {\n  return (\n    <div>\n      <h1>Página não encontrada</h1>\n      <Link to=\"/trybewallet\">Página Inicial</Link>\n    </div>\n  );\n}\n\nexport default NotFound;\n","const fetchApi = async () => {\n  const api = await fetch('https://economia.awesomeapi.com.br/json/all');\n  const apiJson = await api.json();\n\n  return apiJson;\n};\n\nexport default fetchApi;\n","import {\n  errorAction,\n  loadingAction,\n  sucessAction,\n  addExpenseAction,\n} from '.';\nimport fetchApi from '../utils/api';\n\nconst apiWithThunk = () => (dispatch) => {\n  dispatch(loadingAction());\n\n  return fetchApi()\n    .then(\n      (response) => dispatch(sucessAction(response)), () => dispatch(errorAction()),\n    );\n};\n\nexport const fetchExpenseAPI = (payload) => async (dispatch) => {\n  try {\n    const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n    if (!response.ok) throw new Error('Fetch failed');\n    const result = await response.json();\n    delete result.USDT;\n    const expense = { ...payload, exchangeRates: result };\n\n    return dispatch(addExpenseAction(expense));\n  } catch (error) {\n    return dispatch(errorAction(error.message));\n  }\n};\n\nexport default apiWithThunk;\n","export const tags = ['Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n\nexport const methods = ['Dinheiro', 'Cartão de crédito', 'Cartão de débito'];\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button } from '.';\nimport { deleteExpense } from '../actions';\n\nclass Tbody extends React.Component {\n  constructor() {\n    super();\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick({ target }) {\n    const { remove } = this.props;\n    const expenseID = parseInt(target.name, 10);\n    remove(expenseID);\n  }\n\n  render() {\n    const { getExpenses } = this.props;\n\n    return (\n      <>\n        {getExpenses.map((expense) => {\n          const {\n            id,\n            currency,\n            description,\n            tag,\n            method,\n            value,\n            exchangeRates,\n          } = expense;\n\n          return (\n            <tr key={ id }>\n              <td>{description}</td>\n              <td>{tag}</td>\n              <td>{method}</td>\n              <td>{value}</td>\n              <td>{(exchangeRates[currency].name).split('/')[0]}</td>\n              <td>{Number(exchangeRates[currency].ask).toFixed(2)}</td>\n              <td>{Number(exchangeRates[currency].ask * value).toFixed(2)}</td>\n              <td>Real</td>\n              <td>\n                <Button\n                  type=\"button\"\n                  name={ id }\n                  testID=\"delete-btn\"\n                  onClick={ this.handleClick }\n                  text=\"Excluir\"\n                />\n              </td>\n            </tr>\n          );\n        })}\n      </>\n    );\n  }\n}\n\nconst { arrayOf, object } = PropTypes;\n\nTbody.propTypes = {\n  getExpenses: arrayOf(object),\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  getExpenses: state.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  remove: (expenseID) => dispatch(deleteExpense(expenseID)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tbody);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Tbody from './Tbody';\n\nclass Table extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {};\n\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  renderTable() {\n    const tableHeaders = [\n      'Descrição',\n      'Tag',\n      'Método de pagamento',\n      'Valor',\n      'Moeda',\n      'Câmbio utilizado',\n      'Valor convertido',\n      'Moeda de conversão',\n      'Editar/Excluir',\n    ];\n\n    return (\n      <table>\n        <thead>\n          <tr>\n            {tableHeaders.map((name) => <th key={ name }>{name}</th>)}\n          </tr>\n        </thead>\n        <tbody>\n          <Tbody />\n        </tbody>\n      </table>\n    );\n  }\n\n  render() {\n    return (\n      <section>\n        {this.renderTable()}\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  getExpenses: state.wallet.expenses,\n});\n\nconst { arrayOf, object } = PropTypes;\n\nTable.propTypes = {\n  expenses: arrayOf(object),\n}.isRequired;\n\nexport default connect(mapStateToProps)(Table);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport apiWithThunk, { fetchExpenseAPI } from '../actions/actionsThunk';\nimport { tags, methods } from '../utils/options';\nimport Table from './Table';\nimport { Input, Select, Button } from '.';\n\nclass Expenses extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      expense: {\n        id: 0,\n        value: 0,\n        description: '',\n        currency: 'USD',\n        method: 'Dinheiro',\n        tag: 'Alimentação',\n      },\n    };\n\n    this.renderInputs = this.renderInputs.bind(this);\n    this.renderSelects = this.renderSelects.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() { // Retorna o JSON com as moedas.\n    const { getCoinsThunk } = this.props;\n    getCoinsThunk();\n  }\n\n  handleChange({ target }) { // Salva os valores dos inputs no estado local\n    const { name, value } = target;\n    const { expense } = this.state;\n\n    this.setState({\n      expense: {\n        ...expense,\n        [name]: value,\n      },\n    });\n  }\n\n  handleSubmit(event) { // Enviar expenses para o estado global\n    event.preventDefault();\n    const { expense } = this.state; // Traz expense do estado local\n    const { expenses } = this.props; // Traz a chave expenses do mapDispatchToProps\n    this.setState({\n      expense: {\n        id: expense.id + 1,\n        value: 0,\n        description: '',\n        currency: 'USD',\n        method: 'Dinheiro',\n        tag: 'Alimentação',\n      },\n    }, () => {\n      expenses(expense); // Salva os valores do array no expenses do mapDispatchToProps\n    });\n  }\n\n  renderSelects() {\n    const { currencies } = this.props;\n    const getCurrencies = Object.keys(currencies);\n    const filterCurrencies = getCurrencies.filter((item) => item !== 'USDT');\n    return (\n      <div>\n        <Select\n          name=\"currency\"\n          labelText=\"Moeda\"\n          id=\"expense-currency\"\n          options={ filterCurrencies }\n          onChange={ this.handleChange }\n        />\n        <Select\n          name=\"method\"\n          labelText=\"Método de pagamento\"\n          id=\"expense-payment\"\n          options={ methods }\n          onChange={ this.handleChange }\n        />\n        <Select\n          name=\"tag\"\n          labelText=\"Tag\"\n          id=\"expense-category\"\n          options={ tags }\n          onChange={ this.handleChange }\n        />\n      </div>\n    );\n  }\n\n  renderInputs() {\n    return (\n      <div>\n        <Input\n          type=\"number\"\n          name=\"value\"\n          placeholder=\"0\"\n          className=\"expense-input\"\n          id=\"expense-value\"\n          labelText=\"Valor\"\n          onChange={ this.handleChange }\n        />\n        <Input\n          type=\"text\"\n          name=\"description\"\n          className=\"expense-input\"\n          id=\"expense-description\"\n          labelText=\"Descrição\"\n          onChange={ this.handleChange }\n        />\n      </div>\n    );\n  }\n\n  renderForm() {\n    return (\n      <section>\n        <form onSubmit={ this.handleSubmit }>\n          { this.renderInputs() }\n          { this.renderSelects() }\n          <Button\n            name=\"expense-submit\"\n            id=\"expense-submit\"\n            text=\"Adicionar despesa\"\n          />\n        </form>\n      </section>\n    );\n  }\n\n  render() {\n    return (\n      <main>\n        { this.renderForm() }\n        <Table />\n      </main>\n    );\n  }\n}\n\nExpenses.propTypes = {\n  json: PropTypes.func,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  currencies: state.wallet.currencies,\n  getExpenses: state.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getCoinsThunk: () => dispatch(apiWithThunk()),\n  expenses: (payload) => dispatch(fetchExpenseAPI(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Expenses);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Expenses from '../components/Expenses';\nimport { Header } from '../components';\n\nclass Wallet extends React.Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <Expenses />\n        <Link to=\"/trybewallet\">Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default Wallet;\n","import React from 'react';\nimport {\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport { Login, Wallet, NotFound } from './pages';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/trybewallet\" component={ Login } />\n      <Route exact path=\"/trybewallet/wallet\" component={ Wallet } />\n      <Route path=\"*\" component={ NotFound } />\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { USER_INFO } from '../actions/actionTypes';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case USER_INFO:\n    return {\n      ...state,\n      email: action.payload.email,\n      password: action.payload.password,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default userReducer;\n","import {\n  SUCCESS_TYPE,\n  ERROR_TYPE,\n  LOADING_TYPE,\n  ADD_EXPENSES,\n  DELETE_EXPENSE,\n} from '../actions/actionTypes';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  isLoading: false,\n  expenses: [],\n};\n\nconst walletReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case LOADING_TYPE:\n    return {\n      ...state,\n      isLoading: true,\n    };\n  case SUCCESS_TYPE:\n    return {\n      ...state,\n      currencies: action.payload,\n    };\n  case ERROR_TYPE:\n    return {\n      ...state,\n      error: 'error 404',\n    };\n  case ADD_EXPENSES:\n    return {\n      ...state,\n      expenses: [...state.expenses,\n        {\n          ...action.payload,\n          id: state.expenses.length,\n        }],\n      error: '',\n    };\n  case DELETE_EXPENSE:\n    return {\n      ...state,\n      expenses: state.expenses.filter((expense) => expense.id !== action.id),\n    };\n  default:\n    return state;\n  }\n};\n\nexport default walletReducer;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport wallet from './wallet';\n\nconst rootReducer = combineReducers({\n  user, // userReducer\n  wallet, // walletReducer\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}